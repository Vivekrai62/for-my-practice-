import 'package:flutter/material.dart';
import 'package:get/get.dart';
import 'AllColors.dart';
import 'CustomDrawer.dart';


class HomeController extends GetxController {
  final RxString selectedPeriod = 'This month'.obs;
  final RxString selectedNav = ''.obs;
  final RxString selectedSubNav = ''.obs;
  final RxBool isCollapsed = false.obs;

  // Remove isLocalCollapsed since it's now managed in DrawerController

  void updateNavigation(String nav, String subNav) {
    print("Selected Nav: $nav, Selected SubNav: $subNav"); // Debugging log
    selectedNav.value = nav;
    selectedSubNav.value = subNav;
  }
}

class HomeScreen extends GetView<HomeController> {
  HomeScreen({Key? key}) : super(key: key);

  final GlobalKey<ScaffoldState> scaffoldKey = GlobalKey<ScaffoldState>();

  @override
  Widget build(BuildContext context) {
    final controller = Get.put(HomeController());
    final bool isMobile = MediaQuery.of(context).size.width < 600;

    return Scaffold(
      key: scaffoldKey,
      backgroundColor: AllColors.backgroundGreyWhite,
      drawer: isMobile

          ? Drawer(

        backgroundColor: Colors.white,
        child: CustomDrawer(
          onNavigation: controller.updateNavigation,
        ),
      )
          : null,
      body: Row(
        children: [
          if (!isMobile)

            Container(

              decoration: BoxDecoration(
                color: AllColors.whiteColor,
                border: Border(
                  right: BorderSide(color: Colors.grey[200]!),
                ),
              ),
              child: CustomDrawer(
                onNavigation: controller.updateNavigation,
              ),
            ),
          Expanded(
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                AppBar(
                  title: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      const Text('CRM Leads'),
                      const Icon(Icons.access_time_filled), // Icon on the right
                    ],
                  ),
                  leading: isMobile
                      ? IconButton(
                    icon: const Icon(Icons.menu),
                    onPressed: () {
                      scaffoldKey.currentState?.openDrawer();
                    },
                  )
                      : null, // No leading icon on tablet/desktop
                ),
                Expanded(
                  child: Padding(
                    padding: const EdgeInsets.all(24.0),
                    child: Obx(() {
                      if (controller.selectedNav.value == 'Dashboard') {
                        return Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Container(
                              padding: const EdgeInsets.all(20),
                              decoration: BoxDecoration(
                                color: Colors.white,
                                borderRadius: BorderRadius.circular(10),
                                boxShadow: [
                                  BoxShadow(
                                    color: Colors.black.withOpacity(0.1),
                                    blurRadius: 10,
                                    offset: const Offset(0, 5),
                                  ),
                                ],
                              ),
                              child: Text(
                                'Hello, Welcome to the Dashboard!',
                                style: TextStyle(
                                  fontSize: 19,
                                  fontWeight: FontWeight.bold,
                                  color: AllColors.practiceColor,
                                ),
                              ),
                            ),
                          ],
                        );
                      } else if (controller.selectedNav.value == 'Leads' &&
                          controller.selectedSubNav.value == 'List') {
                        return buildLeadsList();
                      }
                      return const SizedBox.shrink();
                    }),
                  ),
                ),
              ],
            ),
          ),
        ],
      ),
    );
  }

  Widget buildLeadsList() {
    return SingleChildScrollView(
      child: Column(
        children: [
          Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              const Text(
                'Leads',
                style: TextStyle(
                  fontSize: 20,
                  fontWeight: FontWeight.bold,
                ),
              ),
              const Spacer(),
              Row(
                children: [
                  Container(
                    padding: const EdgeInsets.symmetric(horizontal: 6, vertical: 2),
                    decoration: BoxDecoration(
                      border: Border.all(color: Colors.grey[300]!),
                      borderRadius: BorderRadius.circular(8),
                    ),
                    child: PopupMenuButton<String>(
                      child: const Row(
                        children: [
                          Text('Column'),
                          Icon(Icons.arrow_drop_down),
                        ],
                      ),
                      onSelected: (String value) {
                        // Handle column selection
                      },
                      itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
                        const PopupMenuItem<String>(
                          value: 'all',
                          child: Text('All Columns'),
                        ),
                        const PopupMenuItem<String>(
                          value: 'custom',
                          child: Text('Custom Columns'),
                        ),
                      ],
                    ),
                  ),
                  const SizedBox(width: 16),
                  IconButton(
                    icon: Icon(Icons.filter_list, color: Colors.grey[600]),
                    onPressed: () {
                      // Handle filter action
                    },
                  ),
                ],
              ),
            ],
          ),
          Padding(
            padding: const EdgeInsets.only(top: 20),
            child:
            LayoutBuilder(
              builder: (context, constraints) {
                final double screenWidth = constraints.maxWidth;
                int crossAxisCount;

                if (screenWidth < 600) {
                  crossAxisCount = 1;
                } else if (screenWidth < 1200) {
                  crossAxisCount = 2;
                } else {
                  crossAxisCount = 3;
                }

                final double itemWidth = (screenWidth - (crossAxisCount - 1) * 16) / crossAxisCount;
                final double itemHeight = 175;
                final double childAspectRatio = itemWidth / itemHeight;

                return GridView.builder(
                  shrinkWrap: true,
                  physics: const NeverScrollableScrollPhysics(),
                  padding: const EdgeInsets.symmetric(horizontal: 0),
                  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                    crossAxisCount: crossAxisCount,
                    crossAxisSpacing: 16,
                    mainAxisSpacing: 16,
                    childAspectRatio: childAspectRatio,
                  ),
                  itemCount: 10,
                  itemBuilder: (context, index) => LeadCard(),
                );
              },
            ),
          ),
        ],
      ),
    );
  }
}
class LeadCard extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return Container(
      decoration: BoxDecoration(
        color: Colors.white,
        borderRadius: BorderRadius.circular(8),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 4,
            offset: const Offset(0, 2),
          ),
        ],
      ),
      child: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Row(
              mainAxisAlignment: MainAxisAlignment.start,
              children: [
                const Expanded(
                  child: Text(
                    "Prelims Pharma Private Limited",
                    style: TextStyle(
                      fontSize: 16,
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                ),
                PopupMenuButton<String>(
                  icon: Icon(Icons.more_vert, color: AllColors.figmaGrey),
                  padding: EdgeInsets.zero,
                  constraints: const BoxConstraints(),
                  onSelected: (String value) {
                    // Handle menu item selection
                  },
                  itemBuilder: (BuildContext context) => <PopupMenuEntry<String>>[
                    const PopupMenuItem<String>(
                      value: 'edit',
                      child: Text('Edit'),
                    ),
                    const PopupMenuItem<String>(
                      value: 'delete',
                      child: Text('Delete'),
                    ),
                  ],
                ),
              ],
            ),
            Row(
              children: [
                Text(
                  "Sanjay Kumar",
                  style: TextStyle(
                    fontSize: 13,
                    fontWeight: FontWeight.w400,
                    color: AllColors.figmaGrey,
                  ),
                ),
                const Spacer(),
                Icon(Icons.call, size: 16, color: AllColors.figmaGrey),
                const SizedBox(width: 5),
                InkWell(
                  onTap: () {
                    // Handle phone number tap
                  },
                  child: const Text("+91-9652066365"),
                ),
              ],
            ),
            const SizedBox(height: 5),
            Row(
              children: [
                Icon(Icons.date_range_sharp, size: 16, color: AllColors.mediumPurple),
                const SizedBox(width: 5),
                Text(
                  'Mon, 03 June 2024 at 12:29 pm',
                  style: TextStyle(fontSize: 13, color: AllColors.mediumPurple),
                ),
                const Spacer(),
                Icon(Icons.language, size: 18.5, color: AllColors.figmaGrey),
                const SizedBox(width: 5),
                Text(
                  "Google",
                  style: TextStyle(fontSize: 13, color: AllColors.figmaGrey),
                ),
              ],
            ),
            const SizedBox(height: 5),
            const Divider(thickness: 0.4),
            Row(
              children: [
                Container(
                  padding: const EdgeInsets.symmetric(horizontal: 12, vertical: 5),
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(30),
                    color: AllColors.lighterPurple,
                  ),
                  child: Text(
                    'Manish Jindal',
                    style: TextStyle(
                      fontSize: 12,
                      fontWeight: FontWeight.w400,
                      color: AllColors.vividPurple,
                    ),
                    overflow: TextOverflow.ellipsis,
                  ),
                ),
                const Spacer(),
                Text(
                  'PharmaHopers',
                  style: TextStyle(
                    fontSize: 12,
                    fontWeight: FontWeight.w400,
                    color: AllColors.practiceColor,
                  ),
                  overflow: TextOverflow.ellipsis,
                ),
              ],
            ),
          ],
        ),
      ),
    );
  }
}

import 'package:flutter/material.dart';
import 'package:get/get.dart';

class CustomerCompaniesScreen extends StatefulWidget {
  const CustomerCompaniesScreen({Key? key}) : super(key: key);

  @override
  State<CustomerCompaniesScreen> createState() => _CustomerCompaniesScreenState();
}

class _CustomerCompaniesScreenState extends State<CustomerCompaniesScreen> {
  final GlobalKey<ScaffoldState> _globalKey = GlobalKey<ScaffoldState>();
  String userName = 'No name';
  String userEmail = 'No email';
  bool isDrawerCollapsed = false;

  @override
  void initState() {
    super.initState();
    // Simulating user data fetch
    fetchUserData();
  }

  Future<void> fetchUserData() async {
    // Simulate API call delay
    await Future.delayed(Duration(milliseconds: 500));
    setState(() {
      userName = 'Pulkit Surana';
      userEmail = 'eraasinternational@gmail.com';
    });
  }

  Widget buildCustomDrawer({required bool isTabletOrDesktop}) {
    return Drawer(
      child: Column(
        children: [
          UserAccountsDrawerHeader(
            accountName: Text(userName),
            accountEmail: Text(userEmail),
            currentAccountPicture: CircleAvatar(
              backgroundColor: Colors.white,
              child: Text(
                userName.isNotEmpty ? userName[0].toUpperCase() : 'U',
                style: TextStyle(fontSize: 24.0),
              ),
            ),
          ),
          ListTile(
            leading: Icon(Icons.business),
            title: Text('Companies'),
            selected: true,
            onTap: () {},
          ),
          // Add more drawer items as needed
        ],
      ),
    );
  }

  Widget buildCustomAppBar() {
    return Container(
      padding: EdgeInsets.symmetric(horizontal: 15, vertical: 10),
      decoration: BoxDecoration(
        color: Colors.white,
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.1),
            spreadRadius: 1,
            blurRadius: 3,
          ),
        ],
      ),
      child: SafeArea(
        child: Row(
          children: [
            if (MediaQuery.of(context).size.width < 500)
              InkWell(
                onTap: () {
                  _globalKey.currentState?.openDrawer();
                },
                child: Icon(Icons.menu_sharp, size: 25),
              ),
            SizedBox(width: 10),
            Text(
              'All Companies',
              style: TextStyle(
                fontSize: 16,
                fontWeight: FontWeight.w700,
              ),
            ),
            Spacer(),
            Icon(Icons.filter_list_outlined, size: 15, color: Colors.grey),
            SizedBox(width: 5),
            Text(
              'Filter',
              style: TextStyle(
                color: Colors.grey,
                fontWeight: FontWeight.w400,
                fontSize: 14,
              ),
            ),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    double screenWidth = MediaQuery.of(context).size.width;
    
    return Scaffold(
      key: _globalKey,
      backgroundColor: Colors.white,
      drawer: buildCustomDrawer(isTabletOrDesktop: screenWidth >= 500),
      body: Stack(
        children: [
          SingleChildScrollView(
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 15),
              child: Column(
                children: [
                  SizedBox(height: 135),
                  CompanyCard(),
                ],
              ),
            ),
          ),
          buildCustomAppBar(),
        ],
      ),
    );
  }
}

class CompanyCard extends StatefulWidget {
  const CompanyCard({Key? key}) : super(key: key);

  @override
  _CompanyCardState createState() => _CompanyCardState();
}

class _CompanyCardState extends State<CompanyCard> {
  int selectedValue = 1;
  int startNumber = 1;
  int endNumber = 3;
  final int maxNumber = 100;
  bool isForwardDisabled = false;
  bool isBackwardDisabled = true;

  String dropdownValue = '2';
  bool isDropdownOpen = false;
  final LayerLink _layerLink = LayerLink();
  OverlayEntry? _overlayEntry;

  @override
  void dispose() {
    _removeDropdownOverlay();
    super.dispose();
  }

  void _removeDropdownOverlay() {
    _overlayEntry?.remove();
    _overlayEntry = null;
  }

  void updateNavigationState() {
    setState(() {
      isBackwardDisabled = selectedValue == 1;
      isForwardDisabled = selectedValue == maxNumber;
    });
  }

  void onNumberSelect(int number) {
    setState(() {
      selectedValue = number;
      updateNavigationState();

      if (number == endNumber && number < maxNumber) {
        startNumber++;
        endNumber++;
      } else if (number == startNumber && number > 1) {
        startNumber--;
        endNumber--;
      }
    });
  }

  void onArrowClick(bool isForward) {
    setState(() {
      if (isForward && selectedValue < maxNumber) {
        selectedValue++;
        if (selectedValue > endNumber) {
          startNumber++;
          endNumber++;
        }
      } else if (!isForward && selectedValue > 1) {
        selectedValue--;
        if (selectedValue < startNumber) {
          startNumber--;
          endNumber--;
        }
      }
      updateNavigationState();
    });
  }

  void toggleDropdown() {
    setState(() {
      isDropdownOpen = !isDropdownOpen;
      if (isDropdownOpen) {
        _showDropdownMenu();
      } else {
        _removeDropdownOverlay();
      }
    });
  }

  void _showDropdownMenu() {
    _removeDropdownOverlay();

    _overlayEntry = OverlayEntry(
      builder: (context) => Positioned(
        width: 80,
        child: CompositedTransformFollower(
          link: _layerLink,
          targetAnchor: Alignment.bottomCenter,
          followerAnchor: Alignment.topCenter,
          offset: const Offset(0, -5),
          child: Material(
            elevation: 4,
            borderRadius: BorderRadius.circular(8),
            color: Colors.white,
            child: Column(
              mainAxisSize: MainAxisSize.min,
              children: ['2', '5', '10', '15', '30', '50', '100', '200', '400']
                  .map((value) => InkWell(
                        onTap: () {
                          setState(() {
                            dropdownValue = value;
                            _removeDropdownOverlay();
                            isDropdownOpen = false;
                          });
                        },
                        child: Container(
                          width: double.infinity,
                          padding: EdgeInsets.symmetric(vertical: 8, horizontal: 16),
                          child: Text(
                            value,
                            textAlign: TextAlign.center,
                            style: TextStyle(fontSize: 14),
                          ),
                        ),
                      ))
                  .toList(),
            ),
          ),
        ),
      ),
    );

    Overlay.of(context)?.insert(_overlayEntry!);
  }

  Widget buildPageNumber(int number) {
    return GestureDetector(
      onTap: () => onNumberSelect(number),
      child: Container(
        margin: EdgeInsets.symmetric(horizontal: 5),
        padding: EdgeInsets.symmetric(vertical: 8, horizontal: 15),
        decoration: BoxDecoration(
          color: selectedValue == number ? Colors.blue : Colors.transparent,
          borderRadius: BorderRadius.circular(5),
        ),
        child: Text(
          number.toString(),
          style: TextStyle(
            color: selectedValue == number ? Colors.white : Colors.black,
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.start,
      children: [
        Container(
          margin: EdgeInsets.only(bottom: 10),
          height: Get.height / 5.6,
          width: Get.width / 1,
          decoration: BoxDecoration(
            color: Colors.white,
            borderRadius: BorderRadius.circular(10),
            boxShadow: [
              BoxShadow(
                color: Colors.black.withOpacity(0.06),
                spreadRadius: 2,
                blurRadius: 4,
              )
            ],
          ),
          child: Padding(
            padding: EdgeInsets.all(20),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Row(
                  children: [
                    Text(
                      'Pulkit Surana',
                      style: TextStyle(
                        color: Colors.grey,
                        fontSize: 12,
                        fontWeight: FontWeight.w400,
                      ),
                    ),
                    Spacer(),
                    Text(
                      'eraasinternational@gmail.com',
                      style: TextStyle(
                        color: Colors.grey,
                        fontWeight: FontWeight.w400,
                        fontSize: 12,
                      ),
                    ),
                  ],
                ),
                Text(
                  'Eras International',
                  style: TextStyle(
                    color: Colors.blue,
                    fontSize: 17,
                    fontWeight: FontWeight.w700,
                  ),
                ),
                Divider(thickness: 0.4),
                Row(
                  children: [
                    Icon(Icons.call, size: 17, color: Colors.grey),
                    SizedBox(width: 10),
                    Text(
                      '+91-9818402350',
                      style: TextStyle(
                        color: Colors.grey,
                        fontWeight: FontWeight.w400,
                        fontSize: 12,
                      ),
                    ),
                    Spacer(),
                    Text(
                      'PARENT COMPANY',
                      style: TextStyle(
                        color: Colors.black,
                        fontWeight: FontWeight.w600,
                        fontSize: 12,
                      ),
                    ),
                  ],
                ),
                Row(
                  children: [
                    Icon(Icons.language, size: 17, color: Colors.grey),
                    SizedBox(width: 10),
                    Text(
                      'https://www.eraasinternational.com',
                      style: TextStyle(
                        color: Colors.grey,
                        fontWeight: FontWeight.w400,
                        fontSize: 12,
                      ),
                    ),
                    Spacer(),
                    Container(
                      height: Get.height / 40,
                      width: Get.width / 7,
                      decoration: BoxDecoration(
                        color: Colors.lightBlue,
                        borderRadius: BorderRadius.circular(15),
                      ),
                      child: Center(
                        child: Text(
                          'N/A',
                          style: TextStyle(
                            color: Colors.blue,
                            fontSize: 12,
                            fontWeight: FontWeight.w400,
                          ),
                        ),
                      ),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
        Padding(
          padding: EdgeInsets.symmetric(horizontal: 20),
          child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: [
              IconButton(
                icon: Icon(
                  Icons.arrow_back_ios,
                  color: isBackwardDisabled ? Colors.grey : Colors.black,
                  size: 14,
                ),
                onPressed: isBackwardDisabled ? null : () => onArrowClick(false),
              ),
              Expanded(
                child: SingleChildScrollView(
                  scrollDirection: Axis.horizontal,
                  child: Row(
                    mainAxisSize: MainAxisSize.min,
                    children: [
                      for (int i = startNumber; i <= endNumber; i++)
                        buildPageNumber(i),
                      if (endNumber < maxNumber)
                        Container(
                          margin: EdgeInsets.symmetric(horizontal: 0),
                          padding: EdgeInsets.symmetric(vertical: 0, horizontal: 5),
                          child: Text('...', style: TextStyle(color: Colors.black)),
                        ),
                    ],
                  ),
                ),
              ),
              IconButton(
                icon: Icon(
                  Icons.arrow_forward_ios,
                  color: isForwardDisabled ? Colors.grey : Colors.black,
                  size: 14,
                ),
                onPressed: isForwardDisabled ? null : () => onArrowClick(true),
              ),
              CompositedTransformTarget(
                link: _layerLink,
                child: GestureDetector(
                  onTap: toggleDropdown,
                  child: Container(
                    padding: EdgeInsets.symmetric(vertical: 5, horizontal: 18),
                    decoration: BoxDecoration(
                      border: Border.all(color: Colors.grey),
                      borderRadius: BorderRadius.circular(12),
                    ),
                    child: Row(
                      mainAxisSize: MainAxisSize.min,
                      children: [
                        Text(dropdownValue),
                        Icon(
                          isDropdownOpen ? Icons.arrow_drop_up : Icons.arrow_drop_down,
                          size: 20,
                        ),
                      ],
                    ),
                  ),
                ),
              ),
            ],
          ),
        ),
      ],
    );
  }
}
